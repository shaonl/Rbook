# Answers for @sec-dtex {#sec-appendixb}

1.  Create a numeric vector called `vec1` comprising the elements `3, -12, 532, 0, -100, 55,` and `-42`. Then, find the median and lowest value in the vector.

```{r}
vec1 <- c(3, -12, 532, 0, -100, 55, -42) 

median(vec1)
min(vec1)

```

2.  Create a new vector `vec2` which contains all the elements of `vec1` that are positive integers. Then create a new vector `vec3` that contains all the elements of `vec1` that are negative integers. Then create a new vector `vec4` which is the sum of `vec2` and `vec3`.

```{r}
vec2 <- vec1[vec1 > 0]
vec3 <- vec1[vec1 < 0]
vec4 <- vec2 + vec3
```

3.  Assign the built-in dataframe `mtcars` to an object named after your favorite animal. Then calculate and print the median of the variable `mpg`.

```{r}
# I'm a big donkey guy, but you can put your favorite animal for the name of the object.
donkey <- mtcars 

median(donkey$mpg)

```

4.  Create a new variable and add to the object you created above (named after your favorite animal). This variable will take the variable Miles per Gallon `mpg` and convert it to Kilometers per Liter, which you will name `kpl`. This can be accomplished by taking `mpg` and dividing it by 2.352. Once you've created this new variable and added it to the object, calculate the median of `kpl`.

```{r}
donkey$kpl <- donkey$mpg / 2.352
median(donkey$kpl)
```

5.  Assign the built-in dataframe `OrchardSprays` to an object name of your choice. Then, convert the variable `treatment` to an ordered factor variable, and change the existing names of factor levels from A:H to a list of sulphur levels from `Sulpher_8` to `Sulpher_1`. Then, print the new `treatment` variable.

```{r, message = FALSE, warning = FALSE}

library(dplyr)

# I'll assign the built-in OrchardSprays dataframe to an object called sprays.
sprays <- OrchardSprays

# Next, I'll convert the treatment variable to an ordered factor variable.

sprays$treatment <- factor(sprays$treatment,
                           ordered = TRUE)

summary(sprays$treatment)

# Next, I'll replace the existing level names with new ones.
sprays$treatment <- recode(sprays$treatment,
                           A = "Sulphur_8",
                           B = "Sulphur_7",
                           C = "Sulphur_6",
                           D = "Sulphur_5",
                           E = "Sulphur_4",
                           F = "Sulphur_3",
                           G = "Sulphur_2",
                           H = "Sulphur_1")

print(sprays$treatment)

```
