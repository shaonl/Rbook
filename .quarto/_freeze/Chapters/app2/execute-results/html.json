{
  "hash": "294a9b65b3a65f9ab0d9e9739f150068",
  "result": {
    "markdown": "# Exercise 8.6 Answers. {#sec-appendixb}\n\n1.  Create a numeric vector called `vec1` comprising the elements `3, -12, 532, 0, -100, 55,` and `-42`. Then, find the median and lowest value in the vector.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvec1 <- c(3, -12, 532, 0, -100, 55, -42) \n\nmedian(vec1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0\n```\n:::\n\n```{.r .cell-code}\nmin(vec1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] -100\n```\n:::\n:::\n\n\n2.  Create a new vector `vec2` which contains all the elements of `vec1` that are positive integers. Then create a new vector `vec3` that contains all the elements of `vec1` that are negative integers. Then create a new vector `vec4` which is the sum of `vec2` and `vec3`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvec2 <- vec1[vec1 > 0]\nvec3 <- vec1[vec1 < 0]\nvec4 <- vec2 + vec3\n```\n:::\n\n\n3.  Create a variable called `MarySue1` with the value `\"Dr Mary Sue Coleman, former president of the University of Michigan once said\"`. Then, create another variable called `MarySue2` with the value `\"For today, goodbye. For tomorrow, good luck. And Forever, Go Blue!\"`. Then find the number of characters in each variable using the `nchar()` function. Then, check if the letter 'r' is present in each variable by using the `grepl()` function, in which the first argument is thing you want to find (i.e. `'r'`), and the second argument is the variable name (i.e. `MarySue1` and `MarySue2`).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nMarySue1 <- \"Dr Mary Sue Coleman, former president of the University of Michigan once said\"\n\nMarySue2 <- \"For today, goodbye. For tomorrow, good luck. And Forever, Go Blue!\"\n\nnchar(MarySue1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 77\n```\n:::\n\n```{.r .cell-code}\nnchar(MarySue2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 66\n```\n:::\n\n```{.r .cell-code}\ngrepl('r', MarySue1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] TRUE\n```\n:::\n\n```{.r .cell-code}\ngrepl('r', MarySue2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] TRUE\n```\n:::\n:::\n\n\n4.  Create a variable called `MarySue3` whose value is a concatenation (combination) of `MarySue1` and `MarySue2` using the `paste()` function, in which the arguments are the variables separated by a comma. Then, print the value for `MarySue3`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nMarySue3 <- paste(MarySue1, MarySue2)\nprint(MarySue3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Dr Mary Sue Coleman, former president of the University of Michigan once said For today, goodbye. For tomorrow, good luck. And Forever, Go Blue!\"\n```\n:::\n:::\n\n\n5.  Assign the built-in dataframe `mtcars` to an object named after your favorite animal. Then calculate and print the median of the variable `mpg`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# I'm a big donkey guy, but you can put your favorite animal for the name of the object.\ndonkey <- mtcars \n\nmedian(donkey$mpg)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 19.2\n```\n:::\n:::\n\n\n6.  Create a new variable and add to the object you created above (named after your favorite animal). This variable will take the variable Miles per Gallon `mpg` and convert it to Kilometers per Liter, which you will name `kpl`. This can be accomplished by taking `mpg` and dividing it by 2.352. Once you've created this new variable and added it to the object, calculate the median of `kpl`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndonkey$kpl <- donkey$mpg / 2.352\nmedian(donkey$kpl)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 8.163265\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}